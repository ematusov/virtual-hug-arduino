[{"/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/index.js":"1","/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/reportWebVitals.js":"2","/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/App.js":"3","/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/WriteValue/WriteValue.js":"4"},{"size":500,"mtime":1610468016706,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":1610468016708,"results":"7","hashOfConfig":"6"},{"size":3431,"mtime":1610649380024,"results":"8","hashOfConfig":"6"},{"size":2065,"mtime":1610642823908,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15a113s",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/index.js",[],["20","21"],"/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/reportWebVitals.js",[],"/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/App.js",["22","23","24","25","26","27","28","29"],"/Users/lmatusov/Documents/msmba/TVI/virtual-hug/src/WriteValue/WriteValue.js",["30","31","32"],"import React from 'react';\nimport './WriteValue.css';\nimport { Button } from '@material-ui/core';\nimport Input from '@material-ui/core/Input'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport FormControl from '@material-ui/core/FormControl';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nclass WriteValue extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {value: ''};\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.stop = this.stop.bind(this);\n        this.writeNewValue = this.writeNewValue.bind(this);\n    }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n\n    // converts an int into a bytearray for the arduino to read\n    bytesArray = (n) => {\n        if (!n) return new ArrayBuffer(0)\n        const a = []\n        a.unshift(n & 255)\n        while (n >= 256) {\n          n = n >>> 8\n          a.unshift(n & 255)\n        }\n        return new Uint8Array(a).buffer\n      }\n\n    handleSubmit(event) {\n        this.writeNewValue(this.state.value)\n        event.preventDefault();\n    }\n\n    stop(event) {\n        this.setState({value: 0});\n        this.writeNewValue(this.state.value)\n    }\n\n    writeNewValue(value) {\n        this.props.characteristic.writeValue(this.bytesArray(value))\n    }\n\n\n    render() {\n      return (\n        <>\n        <h3>Great! Someone around you should be wearing the device. Enter a value from 1-100 to represent how much you miss them.</h3>\n        <h3>When you're done, send a '0' to end your hug</h3>\n        <form onSubmit={this.handleSubmit}>\n            <InputLabel>\n                <Input type=\"text\" value={this.state.value} onChange={this.handleChange}/>\n                <br></br>\n                <br></br>\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\" >Send a vibe</Button>\n            </InputLabel>\n        </form>  \n        </>\n      );\n    }\n  }\n\n  export default WriteValue;",{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":2,"column":18,"nodeType":"39","messageId":"40","endLine":2,"endColumn":22},{"ruleId":"37","severity":1,"message":"41","line":5,"column":8,"nodeType":"39","messageId":"40","endLine":5,"endColumn":18},{"ruleId":"37","severity":1,"message":"42","line":13,"column":9,"nodeType":"39","messageId":"40","endLine":13,"endColumn":28},{"ruleId":"37","severity":1,"message":"43","line":14,"column":9,"nodeType":"39","messageId":"40","endLine":14,"endColumn":43},{"ruleId":"37","severity":1,"message":"44","line":15,"column":9,"nodeType":"39","messageId":"40","endLine":15,"endColumn":27},{"ruleId":"37","severity":1,"message":"45","line":19,"column":9,"nodeType":"39","messageId":"40","endLine":19,"endColumn":26},{"ruleId":"37","severity":1,"message":"46","line":21,"column":9,"nodeType":"39","messageId":"40","endLine":21,"endColumn":19},{"ruleId":"47","severity":1,"message":"48","line":92,"column":5,"nodeType":"49","endLine":92,"endColumn":22},{"ruleId":"37","severity":1,"message":"50","line":6,"column":8,"nodeType":"39","messageId":"40","endLine":6,"endColumn":19},{"ruleId":"37","severity":1,"message":"51","line":7,"column":8,"nodeType":"39","messageId":"40","endLine":7,"endColumn":13},{"ruleId":"37","severity":1,"message":"38","line":8,"column":8,"nodeType":"39","messageId":"40","endLine":8,"endColumn":12},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'Background' is defined but never used.","'SEND_SERVICE_LIZZIE' is assigned a value but never used.","'SEND_SERVICE_CHARACTERISTIC_LIZZIE' is assigned a value but never used.","'DEVICE_NAME_LIZZIE' is assigned a value but never used.","'DEVICE_NAME_TOSIN' is assigned a value but never used.","'bytesArray' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormControl' is defined but never used.","'Paper' is defined but never used.","no-global-assign","no-unsafe-negation"]